name: Docker CI

on:
  push:
    paths:
      - 'vote/**'
      - 'result/**'
      - 'worker/**'
  pull_request:
    paths:
      - 'vote/**'
      - 'result/**'
      - 'worker/**'

jobs:
  build_vote:
    name: Build Vote Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Vote Docker Image
        run: |
          # Use the GitHub Run Number for unique versioning
          VERSION="voting-app-image:${{ github.run_number }}"
          docker build -t $VERSION -f vote/Dockerfile vote/
          echo "::set-env name=IMAGE_VERSION::$VERSION" # Set the IMAGE_VERSION variable for later use
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  build_result:
    name: Build Result Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Result Docker Image
        run: |
          # Use the GitHub Run Number for unique versioning
          VERSION="voting-app-result:${{ github.run_number }}"
          docker build -t $VERSION -f result/Dockerfile result/
          echo "::set-env name=IMAGE_VERSION::$VERSION" # Set the IMAGE_VERSION variable for later use
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  build_worker:
    name: Build Worker Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Worker Docker Image
        run: |
          # Use the GitHub Run Number for unique versioning
          VERSION="voting-worker:${{ github.run_number }}"
          docker build -t $VERSION -f worker/Dockerfile worker/
          echo "::set-env name=IMAGE_VERSION::$VERSION" # Set the IMAGE_VERSION variable for later use
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  push_images:
    name: Push Docker Images
    runs-on: ubuntu-latest
    needs: [build_vote, build_result, build_worker]
    steps:
      - name: Login to Docker Hub
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Push Vote Docker Image
        run: |
          # Use the IMAGE_VERSION variable set in the build_vote step
          docker push $IMAGE_VERSION

      - name: Push Result Docker Image
        run: |
          # Use the IMAGE_VERSION variable set in the build_result step
          docker push $IMAGE_VERSION

      - name: Push Worker Docker Image
        run: |
          # Use the IMAGE_VERSION variable set in the build_worker step
          docker push $IMAGE_VERSION

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
